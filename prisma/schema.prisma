datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id         Int       @id @default(autoincrement())
  email      String    @unique @db.VarChar(30)
  password   String?   @db.VarChar(200)
  nickname   String    @unique @db.VarChar(30)
  createdAt  DateTime
  updatedAt  DateTime?
  provider   String?
  followings Follow[]  @relation("Follower")
  followers  Follow[]  @relation("Following")
  profile    Profile?

  @@map(name: "users")
}

model Profile {
  id             Int              @id @default(autoincrement())
  department     String?          @db.VarChar(50)
  introduce      String?          @db.Text
  createdAt      DateTime
  updatedAt      DateTime?
  user           User             @relation(fields: [userId], references: [id])
  userId         Int
  welltalent     WellTalent[]
  interesttalent InterestTalent[]
  profileImage   Image?

  @@map(name: "profiles")
}

model InterestTalent {
  id        Int       @id @default(autoincrement())
  contents  String?
  createdAt DateTime
  updatedAt DateTime?
  profile   Profile   @relation(fields: [profileId], references: [id])
  profileId Int

  @@map(name: "interest_talents")
}

model WellTalent {
  id        Int       @id @default(autoincrement())
  contents  String?
  createdAt DateTime
  updatedAt DateTime?
  profile   Profile   @relation(fields: [profileId], references: [id])
  profileId Int

  @@map(name: "well_talents")
}

model Image {
  id        Int       @id @default(autoincrement())
  src       String?   @db.VarChar(200)
  createdAt DateTime
  updatedAt DateTime?
  profile   Profile?  @relation(fields: [profileId], references: [id])
  profileId Int?

  @@map(name: "images")
}

model Auth {
  id        Int       @id @default(autoincrement())
  createdAt DateTime
  updatedAt DateTime?
  email     String    @unique @db.VarChar(30)
  auth      String

  @@map("auth")
}

//User to User Follow N:M relation table
model Follow {
  follower    User      @relation("Follower", fields: [followerId], references: [id])
  followerId  Int
  following   User      @relation("Following", fields: [followingId], references: [id])
  followingId Int
  createdAt   DateTime
  updatedAt   DateTime?

  @@unique([followerId, followingId], name: "followKey")
  @@map("follow")
}
